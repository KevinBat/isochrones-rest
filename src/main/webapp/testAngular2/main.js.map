{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/isochrones.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/material.module.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  position: absolute;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.example-is-mobile .example-toolbar {\\r\\n  position: fixed;\\r\\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\nh1.example-app-name {\\r\\n  margin-left: 8px;\\r\\n}\\r\\n\\r\\n.example-sidenav-container {\\r\\n  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\r\\n     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\r\\n  flex: 1;\\r\\n}\\r\\n\\r\\n.example-is-mobile .example-sidenav-container {\\r\\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\r\\n     `<body>` to be our scrolling element for mobile layouts. */\\r\\n  flex: 1 0 auto;\\r\\n}\\r\\n\\r\\n#map {\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0VBQ0UsY0FBYztFQUNkLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsT0FBTztFQUNQLFVBQVU7RUFDVixRQUFRO0VBQ1IsU0FBUztDQUNWOztBQUVEO0VBQ0UsZ0JBQWdCO0VBQ2hCLCtFQUErRTtFQUMvRSxXQUFXO0NBQ1o7O0FBRUQ7RUFDRSxpQkFBaUI7Q0FDbEI7O0FBRUQ7RUFDRTsyRkFDeUY7RUFDekYsUUFBUTtDQUNUOztBQUVEO0VBQ0U7Z0VBQzhEO0VBQzlELGVBQWU7Q0FDaEI7O0FBRUQ7SUFDSSxhQUFhO0lBQ2IsWUFBWTtDQUNmIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmV4YW1wbGUtY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBib3R0b206IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxufVxyXG5cclxuLmV4YW1wbGUtaXMtbW9iaWxlIC5leGFtcGxlLXRvb2xiYXIge1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICAvKiBNYWtlIHN1cmUgdGhlIHRvb2xiYXIgd2lsbCBzdGF5IG9uIHRvcCBvZiB0aGUgY29udGVudCBhcyBpdCBzY3JvbGxzIHBhc3QuICovXHJcbiAgei1pbmRleDogMjtcclxufVxyXG5cclxuaDEuZXhhbXBsZS1hcHAtbmFtZSB7XHJcbiAgbWFyZ2luLWxlZnQ6IDhweDtcclxufVxyXG5cclxuLmV4YW1wbGUtc2lkZW5hdi1jb250YWluZXIge1xyXG4gIC8qIFdoZW4gdGhlIHNpZGVuYXYgaXMgbm90IGZpeGVkLCBzdHJldGNoIHRoZSBzaWRlbmF2IGNvbnRhaW5lciB0byBmaWxsIHRoZSBhdmFpbGFibGUgc3BhY2UuIFRoaXNcclxuICAgICBjYXVzZXMgYDxtYXQtc2lkZW5hdi1jb250ZW50PmAgdG8gYWN0IGFzIG91ciBzY3JvbGxpbmcgZWxlbWVudCBmb3IgZGVza3RvcCBsYXlvdXRzLiAqL1xyXG4gIGZsZXg6IDE7XHJcbn1cclxuXHJcbi5leGFtcGxlLWlzLW1vYmlsZSAuZXhhbXBsZS1zaWRlbmF2LWNvbnRhaW5lciB7XHJcbiAgLyogV2hlbiB0aGUgc2lkZW5hdiBpcyBmaXhlZCwgZG9uJ3QgY29uc3RyYWluIHRoZSBoZWlnaHQgb2YgdGhlIHNpZGVuYXYgY29udGFpbmVyLiBUaGlzIGFsbG93cyB0aGVcclxuICAgICBgPGJvZHk+YCB0byBiZSBvdXIgc2Nyb2xsaW5nIGVsZW1lbnQgZm9yIG1vYmlsZSBsYXlvdXRzLiAqL1xyXG4gIGZsZXg6IDEgMCBhdXRvO1xyXG59XHJcblxyXG4jbWFwIHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcbiJdfQ== */\"","module.exports = \"\\r\\n<!-- Menu -->\\r\\n<div class=\\\"example-container\\\">\\r\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"example-toolbar\\\">\\r\\n    <button mat-icon-button (click)=\\\"snav.toggle()\\\"><mat-icon>menu</mat-icon></button>\\r\\n    <h1 class=\\\"example-app-name\\\">Isochrones</h1>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <mat-sidenav-container class=\\\"example-sidenav-container\\\">\\r\\n    <mat-sidenav #snav [mode]=\\\"'side'\\\" disableClose>\\r\\n      <mat-nav-list>\\r\\n        \\r\\n        <!-- Map -->\\r\\n        <p>Mon formulaire</p>\\r\\n\\t\\t<form name=\\\"form\\\" (ngSubmit)=\\\"f.form.valid && onSubmit()\\\" #f=\\\"ngForm\\\" novalidate>\\r\\n\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t<label for=\\\"from\\\">From</label>\\r\\n\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"from\\\" [(ngModel)]=\\\"model.from\\\" #from=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && from.invalid }\\\" required />\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"f.submitted && from.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t<div>From is required</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<label for=\\\"durations\\\">Duration</label>\\r\\n\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"durations\\\" [(ngModel)]=\\\"model.durations\\\" #durations=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && durations.invalid }\\\" required />\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"f.submitted && durations.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t<div>Last Name is required</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n                <mat-form-field>\\r\\n\\t\\t\\t\\t\\t<input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Begin Date\\\" name=\\\"beginDate\\\" [(ngModel)]=\\\"model.beginDate\\\" #beginDate=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && beginDate.invalid }\\\" required>\\r\\n\\t\\t\\t\\t\\t<mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n\\t\\t\\t\\t\\t<mat-datepicker #picker></mat-datepicker>\\r\\n\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"f.submitted && beginDate.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t<div>Begin Date is required</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t<label for=\\\"delay\\\">Delay</label>\\r\\n\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"delay\\\" [(ngModel)]=\\\"model.delay\\\" #delay=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && delay.invalid }\\\" required />\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"f.submitted && delay.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t<div>Delay is required</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t<label for=\\\"iterations\\\">Iterations</label>\\r\\n\\t\\t\\t\\t<input type=\\\"number\\\" class=\\\"form-control\\\" name=\\\"iterations\\\" [(ngModel)]=\\\"model.iterations\\\" #iterations=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': f.submitted && iterations.invalid }\\\" required />\\r\\n\\t\\t\\t\\t<div *ngIf=\\\"f.submitted && iterations.invalid\\\" class=\\\"invalid-feedback\\\">\\r\\n\\t\\t\\t\\t\\t<div>Iterations is required</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<button class=\\\"btn btn-primary\\\" [disabled]=\\\"f.form.invalid\\\">Submit</button>\\r\\n\\t\\t</form>\\r\\n      </mat-nav-list>\\r\\n    </mat-sidenav>\\r\\n\\r\\n    <mat-sidenav-content>\\r\\n      <!-- Map -->\\r\\n      <div id=\\\"map\\\"></div>\\r\\n    </mat-sidenav-content>\\r\\n  </mat-sidenav-container>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { IsochronesService } from './isochrones.service';\n\nimport * as L from 'leaflet';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n    model: any = {};\n    map: L.Map;\n    geoJsonLayers: L.GeoJSON[] = [];\n    marker: L.Marker;\n\n   constructor(private isochronesService: IsochronesService) { }\n\n    ngOnInit() {\n        const beginPosition: L.LatLng = L.latLng(48.86160921192831, 2.3480594158172607);\n\n        this.map = L.map('map').setView(beginPosition, 13);\n\n        L.tileLayer('https://tile.jawg.io/jawg-streets/{z}/{x}/{y}.png?' +\n            'access-token=WpzgjRXIDbZlxVLLhuxgcDPcHaPpEK9Mu19hiRq9dlxE0TwBKjx2okFvDM9HdPaB',\n            {\n                maxZoom: 19,\n                minZoom: 5\n            }).addTo(this.map);\n\n        this.map.on('click', this.putMarkerOnMap, this);\n        this.marker = L.marker(beginPosition).addTo(this.map);\n        this.model.from = this.marker.getLatLng().lng.toFixed(5) + ';' + this.marker.getLatLng().lat.toFixed(5);\n        this.model.iterations = 1;\n    }\n\n    onSubmit() {\n      // call service to update the map\n      this.isochronesService.getIsochrones(\n        this.model.from, this.model.durations, this.model.beginDate, this.model.delay, this.model.iterations\n      ).subscribe(\n        (data: any) => {\n            // update map\n            this.putIsochrone(data, this.map);\n        },\n        (error) => {\n          console.log('Erreur ! : ' + error);\n          console.log(error);\n        }\n      );\n    }\n\n    putIsochrone(dataJson: any, map: L.Map) {\n        console.log('Success ! :' + dataJson);\n        const colorArrays = ['rgb(0,255,0)', 'rgb(255,255,0)', 'rgb(255,0,0)'];\n\n        this.geoJsonLayers.forEach((layer) => {map.removeLayer(layer); });\n        this.geoJsonLayers = [];\n\n        for (let i = 0; i < dataJson.geojsons.length; i++) {\n            const geoJsonLayer: L.GeoJSON = L.geoJSON(dataJson.geojsons[i], {\n                weight: 1,\n                color: colorArrays[i],\n                opacity: 0.20\n            } as any);\n\n            this.geoJsonLayers.push(geoJsonLayer);\n            geoJsonLayer.addTo(map);\n        }\n    }\n\n    putMarkerOnMap(e: L.LeafletMouseEvent) {\n      this.map.removeLayer(this.marker);\n      this.marker = L.marker(e.latlng).addTo(this.map);\n      this.model.from = this.marker.getLatLng().lng.toFixed(5) + ';' + this.marker.getLatLng().lat.toFixed(5);\n    //   this.map.addLayer(this.marker);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from 'src/material.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IsochronesService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getIsochrones(from: string, durations: string, beginDate: string, delay: number, iterations: number) {\n\n    const url = 'http://localhost:8080/isochrones/api/isochrones?' +\n        '&from=' + from +\n        '&durations=' + durations +\n        '&beginDate=' + beginDate +\n        '&delay=' + delay +\n        '&nb=' + iterations;\n\n    console.log(url);\n    return this.httpClient\n      .get(url);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import {DragDropModule} from '@angular/cdk/drag-drop';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\n\n@NgModule({\n  exports: [\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    ScrollingModule,\n  ]\n})\nexport class MaterialModule {}\n\n\n/**  Copyright 2018 Google Inc. All Rights Reserved.\n    Use of this source code is governed by an MIT-style license that\n    can be found in the LICENSE file at http://angular.io/license */\n"],"sourceRoot":""}